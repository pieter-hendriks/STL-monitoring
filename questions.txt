Text -- Input:
	Do signals input into the program have to be defined for all \tau \in t?
	We define the robustness \rho(\phi, w, t) for some trace w and some timestamps t -- Are signals in W required to have values for all times in T? 

Maintain compatibility for boolean semantics?
	Current version of the code breaks it, I think. BooleanSignal implementation is incomplete

Similar problem in Multiplication etc that we saw in comparison operators:
	Multiplying [[0,1], [0,1]] and [[0, 1], [1, 0]] resulted in [[0, 1], [0,0]] but should have been [[0, 0.5, 1], [0, 0.25, 0]]

	Why do we even have multiplication/division/sum/subtract(difference) implementations?
		These are not part of the STL syntax (as far as I know) and seemingly only serve to make the implementation more complex.

Test comparison function:
	Checking if a certain value is colinear with the ones present in the expected result (maybe?) works for some operators. Division operator, I think, breaks it though. 
	Any division of signal/signal is not going to be a linear function anymore so the FPLC assumption is broken.
	There may be more such cases - are there any alternatives?

Can I just use a derivative recomputation method to fix generated test data? 
	Long method only misses on derivatives - but seems to be correct.

	This one, I'm fairly sure is an error in test data.
	Example output of failure currently:
		AssertionError: Mismatch!
        Expected: SignalValue<T=0.0,V=0.058826673,D=0.0>
        Received: SignalValue<T=0.0,V=0.058826673,D=0.13588571600000002>
		where for T=1.0, the next value is (in both solutions): 0.194712389

	If I correct the testdata derivatives, however, I continue encountering derivative errors through added points. 
	Other example is slightly more involved:
		AssertionError: Mismatch!
			Expected: SignalValue<T=178.0,V=0.99981013,D=-0.015274425999999952>
			Received: SignalValue<T=178.0,V=0.99981013,D=-4.835353860126477>
		Next Checkpoint:
			Expected: SignalValue<T=179.0,V=0.984535704,D=-0.01934962100000004>
			Received: SignalValue<T=179.0,V=0.984535704,D=-0.01934962100000004>
		Obtained Signal has following next cp: 
			SignalValue<T=178.05620414148459,V=0.7280432175174169,D=0.2717669124825831>